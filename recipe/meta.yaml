{% set name = "NJOY2016" %}
{% set version = "2016.78" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/njoy/{{ name }}/archive/refs/tags/{{ version }}.tar.gz
  sha256: 615b7ab506f64d53fcd09d3731762fa6e86d96c97497c1049417c48487a31ff2

build:
  number: 0
  skip: true  # [win or py<34]

requirements:
  build:
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    # If your project compiles code (such as a C extension) then add the required compilers as separate entries here.
    # Compilers are named 'c', 'cxx' and 'fortran'.
    - cmake
    - make
    - {{ compiler('cxx') }}
    - {{ compiler('fortran') }}
    - {{ stdlib("c") }}
  host:
    - python
  run:
    - python

test:
  commands:
    - python -c "import shutil; assert(shutil.which('njoy') != None)"

about:
  home: https://www.njoy21.io/NJOY2016/
  summary: Nuclear data processing with legacy NJOY
  description: |
    The NJOY Nuclear Data Processing System is a modular computer code designed
    to read evaluated data in ENDF format, transform the data in various ways,
    and output the results as libraries designed to be used in various applications.
    Each module performs a well defined processing task. The modules are essentially
    independent programs, and they communicate with each other using input and
    output files, plus a very few common variables.
  license: BSD-3-Clause
  license_family: BSD
  license_file: LICENSE
  doc_url: https://github.com/njoy/NJOY2016-manual/raw/master/njoy16.pdf
  dev_url: https://github.com/njoy/NJOY2016

extra:
  recipe-maintainers:
    - paulromano
    - kkiesling
    - nathangibson14
    - whaeck
